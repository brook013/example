const express = require('express');
const { Pool } = require('pg');
var cors = require('cors')
const app = express();


app.use(express.json());
app.use(cors())

// table 만들어야함, quantity 추가해서 만들어야함, 고유값?

const pool = new Pool({
  user: 'firsttry',
  password: '99884',
  host: 'localhost',
  port: 5432,
  database: 'firsttry'
});

// pool.query(`
//   CREATE TABLE firsttry (
//     id SERIAL PRIMARY KEY,
//     big_category VARCHAR(255),
//     middle_category VARCHAR(255),
//     small_category VARCHAR(255),
//     nick_name VARCHAR(255),
//     product_name VARCHAR(255) UNIQUE NOT NULL
//   )
// `, (err, res) => {
//   console.log(err, res);
//   pool.end();
// });

app.post('/create', async (req, res) => {
  const { big_category, middle_category, small_category, nick_name, product_name } = req.body;
  await pool.query('INSERT INTO firsttry (big_category, middle_category, small_category,nick_name,product_name) VALUES ($1, $2, $3, $4, $5)', [big_category, middle_category, small_category, nick_name, product_name]);
  res.send('Data inserted');
});

app.get('/read', async (req, res) => {
  const result = await pool.query('SELECT * FROM firsttry');
  res.json(result.rows);
});

app.put('/update/:id', async (req, res) => {
  const { id } = req.params;
  const { big_category, middle_category, small_category, nick_name, product_name } = req.body;
  await pool.query('UPDATE firsttry SET big_category = $1, middle_category = $2,small_category = $3, nick_name = $4, product_name = $5 WHERE id = $6', [big_category, middle_category, small_category, nick_name, product_name, id]);
  res.send('Data updated');
});

app.delete('/delete/:id', async (req, res) => {
  const { id } = req.params;
  await pool.query('DELETE FROM firsttry WHERE id = $1', [id]);
  res.send('Data deleted');
});

app.listen(3000, () => {
  console.log('Server running on port 3000');
});
